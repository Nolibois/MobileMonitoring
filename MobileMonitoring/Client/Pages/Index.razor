@page "/"
@using MobileMonitoring.Shared;

@attribute [Authorize]

@inject HttpClient Http;

<PageTitle>Dashboard Monitoring</PageTitle>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 FocOnNav">Dashboard Monitoring</h1>
</div>

<Legend />


<div class="row nav-item">
    @if(tiles is null)
    {
        <div>
            <p>No data to show</p>
        </div>
    }
    else
    {
        @foreach(TileDto tile in tiles)
        {
            <NavLink class="nav-link" href="@module" style="width: max-content;">
                <button 
                    @onclick="@(e => SelectedModule(tile))" 
                    class="card content-box text-bg-@tile.LimitKpiTile() rounded-0 m-3">
                    <div class="card-body">
                        <p class="card-text">@if (tile.Number != null)
                            {
                                @(tile.Number + "K");
                            }
                            else
                            {
                                @("N/A");
                            }
                        </p>
                    </div>
                    <div class="card-footer border-0">@tile.Name</div>
                    <div class="border-box"></div>
                </button>
            </NavLink>
        }
    }
</div>

@code
{
    private IEnumerable<TileDto>? tiles = null;
    private string module = "/";

    protected override async Task OnInitializedAsync()
    {
        tiles = await Http.GetFromJsonAsync<IEnumerable<TileDto>>("api/Tiles");
    }

    protected void SelectedModule(TileDto tile)
    {
        module = tile.ModuleDynamics.Replace(" ", "");
    }
}
