@page "/"
@using MobileMonitoring.Shared;

@attribute [Authorize]

@inject HttpClient http;
@inject IHttpClientFactory httpFactory;
@inject NavigationManager nav;

<PageTitle>Dashboard Monitoring</PageTitle>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 FocOnNav">Dashboard Monitoring</h1>
</div>

<Legend />


<div class="row nav-item">
    @if(tiles is null)
    {
        <div>
            <p>No data to show</p>
        </div>
    }
    else
    {
        @foreach(TileDto tile in tiles)
        {
            <Tile Data=tile OnClick= "() => GoToModule(tile)"/>
        }
    }
</div>

@code
{
    private IEnumerable<TileDto>? tiles = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var httpSec = httpFactory.CreateClient("PrivateApi");
            tiles = await httpSec.GetFromJsonAsync<IEnumerable<TileDto>>("api/Tiles");
        }
        catch(AccessTokenNotAvailableException e)
        {
            e.Redirect();
        }
    }

    protected void GoToModule(TileDto tile)
    {
        nav.NavigateTo(tile.ModuleDynamics.Replace(" ", ""));
    }

}
